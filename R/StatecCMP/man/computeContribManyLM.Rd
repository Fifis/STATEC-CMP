% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/contributions.R
\name{computeContribManyLM}
\alias{computeContribManyLM}
\title{Compute contributions averaged across the models (with robust options)}
\usage{
computeContribManyLM(
  model.list = NULL,
  coef.list = NULL,
  dep.var.name = NULL,
  weights = c("mean", "median"),
  weight.sorted = TRUE,
  newdata = NULL,
  resid.name = "resid",
  zero.residual = FALSE,
  groups = NULL
)
}
\arguments{
\item{model.list}{A list of lm objects}

\item{coef.list}{A list of numerical vector coefficients}

\item{dep.var.name}{Passed to computeContribLM.}

\item{weights}{Character ("mean" or "median") or numeric of length(model.list) to use for weighting.}

\item{weight.sorted}{If TRUE, \code{weights} are applied to the \strong{sorted} predicted levels.
This adds a certain degree of robustness: \code{weights = c(0, 0.5, 1, 0.5, 0)} discards
the outermost predicted values and uses the middle three to compute the contributions.
If FALSE, then, the weights are applied to the models in their original order.}

\item{newdata}{Passed to computeContribLM.}

\item{resid.name}{Passed to computeContribLM.}

\item{zero.residual}{Passed to computeContribLM.}

\item{groups}{A list of character vectors determining which groups of regressors to add up.
Not passed to computeContribLM, but instead, used at the end.}
}
\value{
A list of weighted contributions to the levels, to differences, and vectors of weighted level and diference forecasts.
}
\description{
Compute contributions averaged across the models (with robust options)
}
\examples{
set.seed(1)
x1 <- rnorm(100) + 1:100/50 + 1
x2 <- rnorm(100) - 1:100/50 - 1
x3 <- rnorm(100)
y <- 1 + x1 + x2 + 0.1*x3 + rnorm(100)
d <- data.frame(y, x1, x2, x3)
mod1 <- lm(y ~ x1 + x2, data = d)
mod2 <- lm(y ~ x1 + x3, data = d)
# Adding a model with strange estimates
mod3 <- mod2; mod3$coefficients[1:3] <- c(-1.7, -0.3, 0.8)
mod.list <- list(mod1, mod2, mod3)
d2 <- d[71:100, ]
# Scheme 0: average of 2 good models with 1 bad
ctb <- computeContribManyLM(mod.list, newdata = d2)
# Scheme 1: robust weights (the central prediction is weighted 10 times more)
ctb.w1 <- computeContribManyLM(mod.list, newdata = d2, weights = c(0.1, 1, 0.1))
# Scheme 2: always median prediction
ctb.w2 <- computeContribManyLM(mod.list, newdata = d2, weights = "median")
# Weights: mod1 = 1, mod2 = 1, mod3 (dubious) = 0.1
ctb.w3 <- computeContribManyLM(mod.list, newdata = d2, weights = c(1, 1, 0.1),
                              weight.sorted = FALSE)
round(tail(ctb$level, 5), 3) # Avg. contrib. to Y according to all models
# In theory, the contributions of x1 should be positive over time, and of x2, negative
plotContribLM(ctb, mar = c(2, 2, 2, 0.2), plot.diff = FALSE)
plotContribLM(ctb.w1, mar = c(2, 2, 2, 0.2), plot.diff = FALSE)
plotContribLM(ctb.w2, mar = c(2, 2, 2, 0.2), plot.diff = FALSE)
plotContribLM(ctb.w3, mar = c(2, 2, 2, 0.2), plot.diff = FALSE)
}
