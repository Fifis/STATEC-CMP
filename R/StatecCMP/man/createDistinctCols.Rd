% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generic.R
\name{createDistinctCols}
\alias{createDistinctCols}
\title{Generated visually distinct colours}
\usage{
createDistinctCols(
  n = 4,
  nsamp = 200,
  range1 = c(0, 0.7),
  range2 = c(0.1, 0.9),
  range3 = c(0.1, 0.9),
  norm = 2,
  reduce = min,
  bad.margin = 0.2,
  start.corner = TRUE,
  seed = 1,
  plot = FALSE
)
}
\arguments{
\item{n}{Integer: how many colours to generate?}

\item{nsamp}{Integer: how many colours to sample randomly in a 3D cube (YCbCr)?}

\item{range1}{Luma range of the YCbCr pallette: two numbers from [0, 1]}

\item{range2}{Blue difference range: two numbers from [0, 1]}

\item{range3}{Red difference range: two numbers from [0, 1]}

\item{norm}{Numeric scalar: 1 = Manhattan norm, 2 = Euclidean}

\item{reduce}{A function of two arguments. to reduce two colour distances.}

\item{bad.margin}{Exclude points within this distance from existing ones}

\item{start.corner}{If TRUE, picks a corner of the 3D cube as the 1st colour, otherwise the middle}

\item{seed}{Random seed for uniform generation}

\item{plot}{If TRUE, shows the generated colours in a simple plot.

This function generates many colours uniformly in the YCbCr space and
minimises a function ('reduce') of two distances (in YCbCr and RGB spaces).
These distances allow arbirary powers (1 = Manhattan, 2 = Euclidean)
\code{reduce} can be set to something like \code{function(x) 0.9*min(x) + 0.1*max(x)}
to use the distance closer to the smaller of the two.

This algorithm will fail if bad.margin is too large; if many colours are needed, reduce it to prevent the space shrinkage}
}
\value{
A vector of colours that are as distinct as possible.
}
\description{
Generated visually distinct colours
}
\examples{
cl <- createDistinctCols(20, range1 = c(0, 0.6), plot = TRUE, seed = 2)
cl2 <- createDistinctCols(20, range1 = c(0, 0.6), norm = 1, plot = TRUE, seed = 2)
}
