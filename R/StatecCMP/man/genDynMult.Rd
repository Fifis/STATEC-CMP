% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ecm.R
\name{genDynMult}
\alias{genDynMult}
\title{Dynamic multipliers for an ARDL model}
\usage{
genDynMult(
  endog.lag,
  exog.lag,
  h = 50,
  shock.amount = 1,
  xnames = NULL,
  resid.name = "rest",
  plot = TRUE,
  yname = NULL,
  samescale = TRUE,
  plot.horizon = 12,
  format.fun = function(x) sprintf("\%1.3f", x),
  add.legend = FALSE,
  francais = FALSE,
  ...
)
}
\arguments{
\item{endog.lag}{A numeric vector of AR coefficients on Y[t-1], Y[t-1] etc.}

\item{exog.lag}{A list (!) of vectors of DL coefficients on X[t], X[t-1] etc.}

\item{h}{An integer scalar: horizon at which to terminate the iterative procedure}

\item{shock.amount}{A scalar or numeric vector of the same length as the number of exogenous variables: change of each variable to which Y responds; 1 yields pure dynamic multipliers.}

\item{xnames}{A character vector of human-readable expanded exogenous variable names.}

\item{resid.name}{The name for the last term of the RHS (the residual with a unit coefficient on it)}

\item{plot}{Logical: if TRUE, produces a plot to the current device.}

\item{yname}{Dependent variable names for the plot title.}

\item{samescale}{Logical: use the same vertical axis range to have comparable responses?}

\item{plot.horizon}{An integer: how many periods of the response to plot.}

\item{format.fun}{A function that converts a real humber into a nicely rounded number with the desired precision.}

\item{add.legend}{Logical: if TRUE, add an extra panel with a legend.}

\item{francais}{Logical: if TRUE, the labels are in French.}

\item{...}{Passed to all plot functions tha produce the plots.}
}
\value{
A numeric matrix containing the dynamic multipliers for the requested number of periods (one period per line), starting with period 0 in the 1st line.
}
\description{
Dynamic multipliers for an ARDL model
}
\examples{
rho <- 0.2
dx <- c(x1 = 0.9, x2 = 0.2)
ECT <- -0.8
lx <- c(x1 = -1.5, x2 = 0.5)
ARDL.coef <- ECM2ARDL(dx.coef.list = dx, dy.coef.vec = rho, ECT = ECT, long.run = lx)
dm <- genDynMult(endog.lag = ARDL.coef$AR, exog.lag = ARDL.coef$DL, add.legend = TRUE)
head(dm, 11)
}
\seealso{
[computePropag()] uses dynamic multipliers to decompose the impact of shocks
in a real data set.
[ECM2ARDL()] converts an ECM into an equivalent ARDL.
}
